@using System.Security.Claims
@model IEnumerable<BlogDAL.Blog>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

@{
    var identidad = User.Identity as ClaimsIdentity;
    var roles = identidad.Claims.Where(c => c.Type == ClaimTypes.Role).ToList();

    if (roles.Select(r => r.Value).Contains("User"))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Titulo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UsuarioCreacion)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Titulo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UsuarioCreacion.Nombre)
            </td>
                <td>
                    @{
                        if (roles.Select(r => r.Value).Contains("User"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.BlogId">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.BlogId"> Delete</a>
                        }
                    }
                    <a asp-action="Details" asp-route-id="@item.BlogId">Details</a>

                </td>
        </tr>
}
    </tbody>
</table>
